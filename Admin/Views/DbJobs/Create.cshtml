@model DbBackupEntities.DbJobDetail
@{
    ViewBag.Title = "Create";
}

<br />
<br />

<div class="panel panel-default">
    <div class="panel-heading"><h4>Create New Database Job</h4></div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-12">
                @using (Ajax.BeginForm("GetDatabaseList", "DbJobs", null, new AjaxOptions { LoadingElementId = "loading", HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @class = "form-horizontal" }))
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.DbServerName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.DbServerName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.DbServerName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.DbUserName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.DbUserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.DbUserName)
                        </div>

                        @Html.LabelFor(m => m.DbPassword, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.PasswordFor(m => m.DbPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.DbPassword)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 col-md-offset-2">
                            <input type="submit" class="btn btn-primary" value="Verify Connection" />
                        </div>
                        <div class="col-md-2" id="loading" style="display:none;"><i>Please wait...</i></div>
                    </div>
                }
                <div id="divDatabaseList" style="display:none">
                    @using (Ajax.BeginForm("GetTableList", "DbJobs", null, new AjaxOptions { LoadingElementId = "loading", HttpMethod = "POST", OnSuccess = "OnSuccessTableList", OnFailure = "OnFailure" }, new { id = "frmDatabase", @class = "form-horizontal" }))
                    {
                        @Html.Hidden("hdnDbServerName")
                        @Html.Hidden("hdnDbUserName")
                        @Html.Hidden("hdnDbPassword")
                        <div class="form-group">
                            @Html.LabelFor(m => m.DbName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.DbName, new SelectList(new List<SelectListItem>(), "0", "Select Database"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.DbName)
                            </div>
                            <input type="checkbox" id="chkDbFullBackup" name="chkDbFullBackup" /> Full Database Backup
                        </div>
                    }
                </div>
                <div id="divJobForm" style="display:none;">
                    @using (Html.BeginForm("Create", "DbJobs", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.Hidden("hdnDbServerNameTmp")
                        @Html.Hidden("hdnDbUserNameTmp")
                        @Html.Hidden("hdnDbPasswordTmp")
                        @Html.Hidden("hdnDbNameTmp")
                        @Html.Hidden("hdnFullDbBackupTmp")
                        @Html.Hidden("hdnDbTableListTmp")
                        
                        <div class="form-group" id="divTableList" style="display:none">
                            @Html.LabelFor(m => m.DbTableList, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                <div id="containerDbTable" class="col-md-4 form-control" style="height:250px; overflow:auto; width:280px;"></div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(m => m.JobTitle, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.JobTitle)
                            </div>

                            @Html.LabelFor(m => m.FrequencyInHrs, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.FrequencyInHrs, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.FrequencyInHrs)
                            </div>
                        </div>
                        @*<div class="form-group">
                            @Html.LabelFor(m => m.LastRun, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.LastRun, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LastRun)
                            </div>

                            @Html.LabelFor(m => m.NextRun, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.NextRun, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.NextRun)
                            </div>
                        </div>*@
                        <div class="form-group">
                            @Html.LabelFor(m => m.DirForBackup, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.DirForBackup, new { @class = "form-control", @readonly="readonly" })
                                @Html.ValidationMessageFor(m => m.DirForBackup)
                            </div>
                            @Html.LabelFor(m => m.IsActive, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.CheckBoxFor(m => m.IsActive)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.BackupMethod, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.RadioButtonFor(model => model.BackupMethod, "SaveInSeparateFiles")
                                Save In Separate Files
                                @Html.ValidationMessageFor(m => m.BackupMethod)
                                <br />
                                @Html.RadioButtonFor(model => model.BackupMethod, "SaveInOneFile")
                                Save In One File
                            </div>

                            @Html.LabelFor(m => m.InsertMethod, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.RadioButtonFor(model => model.InsertMethod, "InsertIgnore")
                                Insert Ignore
                                @Html.ValidationMessageFor(m => m.InsertMethod)
                                <br />
                                @Html.RadioButtonFor(model => model.InsertMethod, "ReplaceInsert")
                                Replace Insert
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.SaveStructure, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.CheckBoxFor(m => m.SaveStructure)
                                @Html.ValidationMessageFor(m => m.SaveStructure)
                            </div>

                            @Html.LabelFor(m => m.CompressToZip, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.CheckBoxFor(m => m.CompressToZip)
                                @Html.ValidationMessageFor(m => m.CompressToZip)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.DeleteOldBackups, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.CheckBoxFor(m => m.DeleteOldBackups)
                                @Html.ValidationMessageFor(m => m.DeleteOldBackups)
                            </div>

                            @Html.LabelFor(m => m.KeepXBackups, new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.KeepXBackups, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.KeepXBackups)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create Job" class="btn btn-success" onclick="return validateForm();" />
                                <a href="~/DbJobs/Index" class="btn btn-default">Cancel</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")

    <script type="text/javascript">
        function OnSuccess(data) {
            $("#DbName").append(new Option("Select", "0"));
            $.each(data, function (i) {
                $("#DbName").append(new Option(data[i], data[i]));
            });
            $("#divDatabaseList").show();
        }

        function OnSuccessTableList(data)
        {
            $("#divTableList").show();
            $('#containerDbTable').html("");
            $.each(data, function (i) {
                $('#containerDbTable').append(
                     $(document.createElement('input')).prop({
                         id: 'lstDbTables',
                         name: 'lstDbTables',
                         value: data[i],
                         type: 'checkbox'
                     })
                   ).append(
                     $(document.createElement('label')).prop({
                         for: 'lstDbTables'
                     }).html(data[i])
                   ).append(document.createElement('br'));
            });
            $("#divJobForm").show();
        }

        function OnFailure(data) {
            alert('HTTP Status Code: ' + data.param1 + '  Error Message: ' + data.param2);
        }

        $("#DbName").on("change", function () {
            $("#hdnDbServerName").val($("#DbServerName").val());
            $("#hdnDbUserName").val($("#DbUserName").val());
            $("#hdnDbPassword").val($("#DbPassword").val());
            $("#frmDatabase").submit();
            
        });

        $("#chkDbFullBackup").on("change", function () {
            if ($("#chkDbFullBackup").is(":checked")) {
                $("#divTableList").hide();
                $.each($("input[name='lstDbTables']:checked"), function () {
                    $(this).removeAttr("checked");
                });
            }
            else {
                $("#divTableList").show();
            }
        });

        function validateForm()
        {
            var tmpDbTableList = [];
            $.each($("input[name='lstDbTables']:checked"), function () {
                tmpDbTableList.push($(this).val());
            });
            $("#hdnDbServerNameTmp").val($("#hdnDbServerName").val());
            $("#hdnDbUserNameTmp").val($("#hdnDbUserName").val());
            $("#hdnDbPasswordTmp").val($("#hdnDbPassword").val());
            $("#hdnDbNameTmp").val($("#DbName").val());
            $("#hdnFullDbBackupTmp").val($("#chkDbFullBackup").is(":checked"));
            $("#hdnDbTableListTmp").val(tmpDbTableList.join(", "));
        }
    </script>
}
